;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file

;-------------------------------------------------------------------------------
ADD_OP:         .equ        0x11
SUB_OP:         .equ        0x22
MUL_OP:			.equ		0x33
CLR_OP:			.equ		0x44
END_OP:			.equ		0x55
OPERAND:		.equ		r6
ACCUMULATOR:	.equ		r5

      		.data
myResults:	.space	20

            .text                           ; Assemble into program memory
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section
            .retainrefs                     ; Additionally retain any sections
                                            ; that have references to current
                                            ; section
;-------------------------------------------------------------------------------
RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer

;-------------------------------------------------------------------------------
                                            ; Main loop here
myProgram:	.byte	0x11, 0x11, 0x11, 0x11, 0x11, 0x44, 0x22, 0x22, 0x22, 0x11, 0xCC, 0x55

	mov.b	#0, ACCUMULATOR
	mov.b	#1, OPERAND

read
	mov.b	myProgram, ACCUMULATOR
	inc.b	myProgram

operand
	mov.b	myProgram, OPERAND
	inc.b 	myProgram

	cmp.b	&ADD_OP, OPERAND
	jmp		addition
	cmp.b	&SUB_OP, OPERAND
	jmp		subtract
	cmp.b	&MUL_OP, OPERAND
	jmp		multiply
	cmp.b	&CLR_OP, OPERAND
	jmp		clear
	cmp.b	&END_OP, OPERAND
	jmp		endProgram

addition
	add.b	myProgram, ACCUMULATOR
	inc.b	myProgram
	mov.b 	ACCUMULATOR, myResults
	inc.b	myResults
	jmp 	operand

subtract
	sub.b	myProgram, ACCUMULATOR
	inc.b	myProgram
	mov.b 	ACCUMULATOR, myResults
	inc.b	myResults
	jmp 	operand

multiply


clear
	mov.b	#0, ACCUMULATOR
	inc.b	myProgram
	mov.b 	ACCUMULATOR, myResults
	inc.b	myResults
	jmp 	operand

endProgram	jmp		endProgram



;-------------------------------------------------------------------------------




;-------------------------------------------------------------------------------
;           Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect 	.stack

;-------------------------------------------------------------------------------
;           Interrupt Vectors
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
